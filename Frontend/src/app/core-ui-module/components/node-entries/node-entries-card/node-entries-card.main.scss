@import '../../../styles/variables';

$optionBarHeight: 50px;

.grid-card {
    transition: all $transitionNormal;
    // to prevent click animation to float across the whole screen
    overflow: hidden;
    background-color: #fff;
    @include materialShadowBottom();
    display: grid;
    height: 100%;
    grid-template-columns: auto;
    @include contrastMode {
        border: 1px solid rgba(black, 0.42);
    }
    .dropdown-dummy {
        position: fixed;
    }
    .card-options {
        display: grid;
        grid-template-columns: 1fr auto;
        grid-column-gap: 10px;
        padding: 5px 5px 7px 10px;
        .card-rating-area {
            display: flex;
            align-items: center;
            height: 100%;
        }
        .card-options-area {
            display: flex;
            .card-options-spacer {
                // margin: 0 5px;
                // border-left: 1px solid #ccc;
            }

            es-option-button,
            button {
                transition: all $transitionNormal;
                margin: 0 2px;
                border-radius: 50%;

                &:hover,
                &:focus {
                    background-color: #fff;
                }
            }
        }
    }
    &:not(.grid-card-collection) {
        .card-top-bar {
            background-color: $primaryMediumLight;
        }
    }
    &.grid-card-virtual {
        outline: 2px dashed $nodeVirtualColor;
    }
    .card-top-bar {
        background-color: rgba(255, 255, 255, 0.5);
        height: $topBarHeight;

        display: flex;
        gap: 15px;

        align-items: center;
        padding: 0 $entriesCardPaddingHorizontal;
        .card-top-bar-type,
        .card-top-bar-flag {
            display: flex;
            align-items: center;
            justify-content: center;
            user-select: none;
            //align-self: flex-start;
            border-radius: 50%;
            background-color: #fff;
            padding: 5px;
            @include materialShadow();
            i {
                // TODO: do we want to style based on collection type?
                font-size: 18px;
                color: #333;
            }
            img {
                width: 18px;
                height: 18px;
            }
        }
        .card-top-bar-type {
        }
        .card-top-bar-comments,
        .card-top-bar-childobjects {
            > div {
                background-color: rgba(255, 255, 255, 0.75);
                border-radius: 15px;
                display: inline-flex;
                align-items: center;
                min-width: 35px;
                justify-content: center;
                cursor: default;
                user-select: none;
                padding: 2px 8px;
                &.childobject-count {
                    > i {
                        font-size: 13px;
                        margin-left: 4px;
                    }
                }
                &.node-comments {
                    > i {
                        font-size: 13px;
                        margin-right: 4px;
                    }
                }
            }
        }
        .card-top-bar-checkbox {
            mat-checkbox {
                margin-right: -20px;
                position: relative;
                top: -1.3px;
                &.cdk-keyboard-focused ::ng-deep .mat-focus-indicator {
                    @include removeDefaultFocus();
                    &::after {
                        content: '';
                        position: absolute;
                        left: 2px;
                        right: 2px;
                        top: 2px;
                        bottom: 2px;
                        @include setGlobalKeyboardFocus('border');
                        border-color: white;
                    }
                }
            }
        }
        .card-top-bar-empty {
            width: 0;
            flex-grow: 1;
        }
    }
    .card-image-area {
        height: $imageHeight;
        padding: 0;
        display: flex;
        es-preview-image {
            flex-grow: 1;
        }
        .card-collection-image {
            display: flex;
            width: 100%;
            height: 100%;
            align-items: center;
            justify-content: center;
            i {
                display: flex;
                align-items: center;
                justify-content: center;
                user-select: none;
                color: rgba(0, 0, 0, 0.75);
                background-color: rgba(255, 255, 255, 0.5);
                padding: $collectionIconPadding;
                font-size: $collectionIconSize;
                border-radius: 50%;
            }
        }
    }
    .card-meta {
        padding: $entriesCardPaddingVertical $entriesCardPaddingHorizontal 0
            $entriesCardPaddingHorizontal;
        display: grid;
        flex-direction: row;
        .card-meta-row {
            display: flex;
            flex-direction: row;
            align-items: center;
            min-height: 2.5em;
            &:not(:first-child) {
                > label {
                    cursor: inherit;
                    color: $textLight;
                    font-size: 85%;
                }
                > es-list-base {
                    color: #000;
                    flex-grow: 1;
                    margin: 5px 0;
                    display: flex;
                    justify-content: flex-end;
                    text-align: end;
                    word-break: break-word;
                    // height: 1em;
                }
            }
            &:first-child {
                > es-list-base,
                > es-node-url {
                    width: 100%;
                    color: $textMain;
                    font-size: 120%;
                    height: 1.25 * 2em;
                    text-align: left;
                    word-break: break-word;
                }
            }
        }
    }
    &:hover {
        @include materialShadowMediumLarge(false, 0.2);
        background-color: $primaryVeryLight;
        // transform: scale(1.0075);
    }
    &.grid-card-collection:hover .card-meta {
        background-color: rgba(255, 255, 255, 0.9);
    }
    .card-options {
        border-top: 1px solid #ddd;
        // margin-top: 2px; white artefact on hover
    }
}
:host ::ng-deep {
    .grid-card {
        .card-meta-row {
            &:first-child {
                es-list-base,
                es-node-url a es-list-base {
                    @include limitLineCount(2, 1.25);
                }
            }
            es-node-url {
                a {
                    color: $textMain;
                    &.cdk-keyboard-focused {
                        display: inline-flex;
                        @include setGlobalKeyboardFocus('outline');
                    }
                }
            }
        }
    }
    .card-meta {
        es-list-base {
            es-list-node-license {
                img {
                    height: 20px;
                }
            }
            es-list-collection-info {
                display: flex;
                align-items: center;
                // justify-content: flex-end;
                i {
                    font-size: 12pt;
                    margin: 0 6px;
                }
            }
        }
    }
    .grid-card-collection es-node-url {
        a.cdk-keyboard-focused .card-meta {
            // @TDOO: better focus visibility is required
            background-color: #fff;
        }
    }
}
