/*
 * edu-sharing Repository REST API
 * The public restful API of the edu-sharing repository.
 *
 * OpenAPI spec version: 1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.MdsQueryCriteria;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * SearchParameters
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-06-09T17:32:21.273+02:00")
public class SearchParameters {
  @SerializedName("permissions")
  private List<String> permissions = null;

  @SerializedName("resolveCollections")
  private Boolean resolveCollections = false;

  @SerializedName("criterias")
  private List<MdsQueryCriteria> criterias = new ArrayList<MdsQueryCriteria>();

  @SerializedName("facettes")
  private List<String> facettes = new ArrayList<String>();

  public SearchParameters permissions(List<String> permissions) {
    this.permissions = permissions;
    return this;
  }

  public SearchParameters addPermissionsItem(String permissionsItem) {
    if (this.permissions == null) {
      this.permissions = new ArrayList<String>();
    }
    this.permissions.add(permissionsItem);
    return this;
  }

   /**
   * Get permissions
   * @return permissions
  **/
  @ApiModelProperty(value = "")
  public List<String> getPermissions() {
    return permissions;
  }

  public void setPermissions(List<String> permissions) {
    this.permissions = permissions;
  }

  public SearchParameters resolveCollections(Boolean resolveCollections) {
    this.resolveCollections = resolveCollections;
    return this;
  }

   /**
   * Get resolveCollections
   * @return resolveCollections
  **/
  @ApiModelProperty(value = "")
  public Boolean isResolveCollections() {
    return resolveCollections;
  }

  public void setResolveCollections(Boolean resolveCollections) {
    this.resolveCollections = resolveCollections;
  }

  public SearchParameters criterias(List<MdsQueryCriteria> criterias) {
    this.criterias = criterias;
    return this;
  }

  public SearchParameters addCriteriasItem(MdsQueryCriteria criteriasItem) {
    this.criterias.add(criteriasItem);
    return this;
  }

   /**
   * Get criterias
   * @return criterias
  **/
  @ApiModelProperty(required = true, value = "")
  public List<MdsQueryCriteria> getCriterias() {
    return criterias;
  }

  public void setCriterias(List<MdsQueryCriteria> criterias) {
    this.criterias = criterias;
  }

  public SearchParameters facettes(List<String> facettes) {
    this.facettes = facettes;
    return this;
  }

  public SearchParameters addFacettesItem(String facettesItem) {
    this.facettes.add(facettesItem);
    return this;
  }

   /**
   * Get facettes
   * @return facettes
  **/
  @ApiModelProperty(required = true, value = "")
  public List<String> getFacettes() {
    return facettes;
  }

  public void setFacettes(List<String> facettes) {
    this.facettes = facettes;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SearchParameters searchParameters = (SearchParameters) o;
    return Objects.equals(this.permissions, searchParameters.permissions) &&
        Objects.equals(this.resolveCollections, searchParameters.resolveCollections) &&
        Objects.equals(this.criterias, searchParameters.criterias) &&
        Objects.equals(this.facettes, searchParameters.facettes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(permissions, resolveCollections, criterias, facettes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SearchParameters {\n");
    
    sb.append("    permissions: ").append(toIndentedString(permissions)).append("\n");
    sb.append("    resolveCollections: ").append(toIndentedString(resolveCollections)).append("\n");
    sb.append("    criterias: ").append(toIndentedString(criterias)).append("\n");
    sb.append("    facettes: ").append(toIndentedString(facettes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

