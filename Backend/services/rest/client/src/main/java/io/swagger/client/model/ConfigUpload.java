/*
 * edu-sharing Repository REST API
 * The public restful API of the edu-sharing repository.
 *
 * OpenAPI spec version: 1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ConfigUpload
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-06-09T17:32:21.273+02:00")
public class ConfigUpload {
  /**
   * Gets or Sets postDialog
   */
  @JsonAdapter(PostDialogEnum.Adapter.class)
  public enum PostDialogEnum {
    SIMPLEEDIT("SimpleEdit"),
    
    MDS("Mds");

    private String value;

    PostDialogEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static PostDialogEnum fromValue(String text) {
      for (PostDialogEnum b : PostDialogEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<PostDialogEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final PostDialogEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public PostDialogEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return PostDialogEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("postDialog")
  private PostDialogEnum postDialog = null;

  public ConfigUpload postDialog(PostDialogEnum postDialog) {
    this.postDialog = postDialog;
    return this;
  }

   /**
   * Get postDialog
   * @return postDialog
  **/
  @ApiModelProperty(value = "")
  public PostDialogEnum getPostDialog() {
    return postDialog;
  }

  public void setPostDialog(PostDialogEnum postDialog) {
    this.postDialog = postDialog;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ConfigUpload configUpload = (ConfigUpload) o;
    return Objects.equals(this.postDialog, configUpload.postDialog);
  }

  @Override
  public int hashCode() {
    return Objects.hash(postDialog);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ConfigUpload {\n");
    
    sb.append("    postDialog: ").append(toIndentedString(postDialog)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

