/*
 * edu-sharing Repository REST API
 * The public restful API of the edu-sharing repository.
 *
 * OpenAPI spec version: 1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.JobFieldDescription;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * JobFieldDescription
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-06-09T17:32:21.273+02:00")
public class JobFieldDescription {
  @SerializedName("name")
  private String name = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("file")
  private Boolean file = false;

  @SerializedName("values")
  private List<JobFieldDescription> values = null;

  @SerializedName("sampleValue")
  private String sampleValue = null;

  public JobFieldDescription name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public JobFieldDescription description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public JobFieldDescription file(Boolean file) {
    this.file = file;
    return this;
  }

   /**
   * Get file
   * @return file
  **/
  @ApiModelProperty(value = "")
  public Boolean isFile() {
    return file;
  }

  public void setFile(Boolean file) {
    this.file = file;
  }

  public JobFieldDescription values(List<JobFieldDescription> values) {
    this.values = values;
    return this;
  }

  public JobFieldDescription addValuesItem(JobFieldDescription valuesItem) {
    if (this.values == null) {
      this.values = new ArrayList<JobFieldDescription>();
    }
    this.values.add(valuesItem);
    return this;
  }

   /**
   * Get values
   * @return values
  **/
  @ApiModelProperty(value = "")
  public List<JobFieldDescription> getValues() {
    return values;
  }

  public void setValues(List<JobFieldDescription> values) {
    this.values = values;
  }

  public JobFieldDescription sampleValue(String sampleValue) {
    this.sampleValue = sampleValue;
    return this;
  }

   /**
   * Get sampleValue
   * @return sampleValue
  **/
  @ApiModelProperty(value = "")
  public String getSampleValue() {
    return sampleValue;
  }

  public void setSampleValue(String sampleValue) {
    this.sampleValue = sampleValue;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    JobFieldDescription jobFieldDescription = (JobFieldDescription) o;
    return Objects.equals(this.name, jobFieldDescription.name) &&
        Objects.equals(this.description, jobFieldDescription.description) &&
        Objects.equals(this.file, jobFieldDescription.file) &&
        Objects.equals(this.values, jobFieldDescription.values) &&
        Objects.equals(this.sampleValue, jobFieldDescription.sampleValue);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, description, file, values, sampleValue);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class JobFieldDescription {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    file: ").append(toIndentedString(file)).append("\n");
    sb.append("    values: ").append(toIndentedString(values)).append("\n");
    sb.append("    sampleValue: ").append(toIndentedString(sampleValue)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

