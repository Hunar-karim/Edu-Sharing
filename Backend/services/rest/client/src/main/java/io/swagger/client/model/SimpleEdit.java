/*
 * edu-sharing Repository REST API
 * The public restful API of the edu-sharing repository.
 *
 * OpenAPI spec version: 1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.SimpleEditGlobalGroups;
import io.swagger.client.model.SimpleEditOrganization;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * SimpleEdit
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-06-09T17:32:21.273+02:00")
public class SimpleEdit {
  @SerializedName("globalGroups")
  private List<SimpleEditGlobalGroups> globalGroups = null;

  @SerializedName("organization")
  private SimpleEditOrganization organization = null;

  @SerializedName("organizationFilter")
  private String organizationFilter = null;

  public SimpleEdit globalGroups(List<SimpleEditGlobalGroups> globalGroups) {
    this.globalGroups = globalGroups;
    return this;
  }

  public SimpleEdit addGlobalGroupsItem(SimpleEditGlobalGroups globalGroupsItem) {
    if (this.globalGroups == null) {
      this.globalGroups = new ArrayList<SimpleEditGlobalGroups>();
    }
    this.globalGroups.add(globalGroupsItem);
    return this;
  }

   /**
   * Get globalGroups
   * @return globalGroups
  **/
  @ApiModelProperty(value = "")
  public List<SimpleEditGlobalGroups> getGlobalGroups() {
    return globalGroups;
  }

  public void setGlobalGroups(List<SimpleEditGlobalGroups> globalGroups) {
    this.globalGroups = globalGroups;
  }

  public SimpleEdit organization(SimpleEditOrganization organization) {
    this.organization = organization;
    return this;
  }

   /**
   * Get organization
   * @return organization
  **/
  @ApiModelProperty(value = "")
  public SimpleEditOrganization getOrganization() {
    return organization;
  }

  public void setOrganization(SimpleEditOrganization organization) {
    this.organization = organization;
  }

  public SimpleEdit organizationFilter(String organizationFilter) {
    this.organizationFilter = organizationFilter;
    return this;
  }

   /**
   * Get organizationFilter
   * @return organizationFilter
  **/
  @ApiModelProperty(value = "")
  public String getOrganizationFilter() {
    return organizationFilter;
  }

  public void setOrganizationFilter(String organizationFilter) {
    this.organizationFilter = organizationFilter;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SimpleEdit simpleEdit = (SimpleEdit) o;
    return Objects.equals(this.globalGroups, simpleEdit.globalGroups) &&
        Objects.equals(this.organization, simpleEdit.organization) &&
        Objects.equals(this.organizationFilter, simpleEdit.organizationFilter);
  }

  @Override
  public int hashCode() {
    return Objects.hash(globalGroups, organization, organizationFilter);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SimpleEdit {\n");
    
    sb.append("    globalGroups: ").append(toIndentedString(globalGroups)).append("\n");
    sb.append("    organization: ").append(toIndentedString(organization)).append("\n");
    sb.append("    organizationFilter: ").append(toIndentedString(organizationFilter)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

