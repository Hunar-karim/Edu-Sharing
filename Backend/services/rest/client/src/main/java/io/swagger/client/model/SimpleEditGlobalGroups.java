/*
 * edu-sharing Repository REST API
 * The public restful API of the edu-sharing repository.
 *
 * OpenAPI spec version: 1.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * SimpleEditGlobalGroups
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2021-06-09T17:32:21.273+02:00")
public class SimpleEditGlobalGroups {
  @SerializedName("toolpermission")
  private String toolpermission = null;

  @SerializedName("groups")
  private List<String> groups = null;

  public SimpleEditGlobalGroups toolpermission(String toolpermission) {
    this.toolpermission = toolpermission;
    return this;
  }

   /**
   * Get toolpermission
   * @return toolpermission
  **/
  @ApiModelProperty(value = "")
  public String getToolpermission() {
    return toolpermission;
  }

  public void setToolpermission(String toolpermission) {
    this.toolpermission = toolpermission;
  }

  public SimpleEditGlobalGroups groups(List<String> groups) {
    this.groups = groups;
    return this;
  }

  public SimpleEditGlobalGroups addGroupsItem(String groupsItem) {
    if (this.groups == null) {
      this.groups = new ArrayList<String>();
    }
    this.groups.add(groupsItem);
    return this;
  }

   /**
   * Get groups
   * @return groups
  **/
  @ApiModelProperty(value = "")
  public List<String> getGroups() {
    return groups;
  }

  public void setGroups(List<String> groups) {
    this.groups = groups;
  }


  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SimpleEditGlobalGroups simpleEditGlobalGroups = (SimpleEditGlobalGroups) o;
    return Objects.equals(this.toolpermission, simpleEditGlobalGroups.toolpermission) &&
        Objects.equals(this.groups, simpleEditGlobalGroups.groups);
  }

  @Override
  public int hashCode() {
    return Objects.hash(toolpermission, groups);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SimpleEditGlobalGroups {\n");
    
    sb.append("    toolpermission: ").append(toIndentedString(toolpermission)).append("\n");
    sb.append("    groups: ").append(toIndentedString(groups)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

